# Copyright 2015-2023 Lenovo
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from datetime import datetime
from os import path

from setuptools import setup
from setuptools_scm.version import guess_next_version

now = datetime.utcnow().strftime('%Y%m%d%H')

TEMPLATE = """\
# Copyright 2015-2023 Lenovo
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# file generated by setuptools_scm
# don't change, don't track in version control

version = {version!r}
version_tuple = {version_tuple!r}
""" + f"""\
build_date = {now!r}
"""

def guess_next_dev_version(version):
    if not version.distance:
        return version.format_with("{tag}")
    else:
        return version.format_next_version(guess_next_version)

def get_local_node(version):
    if not version.distance:
        return ''
    else:
        return version.format_with('+{node}')


root = '../..'

setup(
    use_scm_version = dict(
        root = root,
        version_scheme=guess_next_dev_version,
        local_scheme=get_local_node,
        write_to = path.join(
            path.relpath(
                path.abspath(path.dirname(__file__)),
                start=root
            ), 
            'lico/core/base/_version.py'
        ),
        write_to_template = TEMPLATE
    ),
)
