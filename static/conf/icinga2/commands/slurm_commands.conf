object CheckCommand "lico_cpu" {
 command = [ "/opt/lico/pub/monitor/bin/lico_set_cap","/opt/lico/pub/monitor/bin/python", "base.cpu.lico_check_cpu" ]
 arguments = {
   "--load" = {
     set_if = "$get_cpu_load$"
   },
   "--util" = {
     set_if = "$get_cpu_util$"
   },
   "--core" = {
     set_if = "$get_cpu_core$"
   },
   "--hypervisor" = {
     set_if = "$get_cpu_hypervisor$"
   }
 }
}

object CheckCommand "lico_disk" {
 command = [ "/opt/lico/pub/monitor/bin/lico_set_cap","/opt/lico/pub/monitor/bin/python", "base.disk.lico_check_disk" ]
 arguments = {
   "--total" = {
     set_if = "$get_disk_total$"
   },
   "--used" = {
     set_if = "$get_disk_used$"
   }
 }
}

object CheckCommand "lico_memory" {
 command = [ "/opt/lico/pub/monitor/bin/lico_set_cap","/opt/lico/pub/monitor/bin/python", "base.memory.lico_check_memory" ]
 arguments = {
   "--total" = {
     set_if = "$get_memory_total$"
   },
   "--used" = {
     set_if = "$get_memory_used$"
   }
 }
}

object CheckCommand "lico_eth" {
 command = [ "/opt/lico/pub/monitor/bin/lico_set_cap","/opt/lico/pub/monitor/bin/python", "network.eth.lico_check_ethernet" ]
 arguments = {
   "--send" = {
     set_if = "$get_eth_send$"
   },
   "--recv" = {
     set_if = "$get_eth_recv$"
   }
 }
}

object CheckCommand "lico_ib" {
 command = [ "/opt/lico/pub/monitor/bin/lico_set_cap","/opt/lico/pub/monitor/bin/python", "network.ib.lico_check_infiniband" ]
 arguments = {
   "--send" = {
     set_if = "$get_ib_send$"
   },
   "--recv" = {
     set_if = "$get_ib_recv$"
   }
 }
}

object CheckCommand "lico_health" {
 command = [ "/opt/lico/pub/monitor/bin/lico_set_cap","/opt/lico/pub/monitor/bin/python", "outband.health.lico_check_health" ]
 arguments = {
   "--health" = {
     set_if = "$get_node_health$"
   }
 }
}

object CheckCommand "lico_power" {
 command = [ "/opt/lico/pub/monitor/bin/lico_set_cap","/opt/lico/pub/monitor/bin/python", "outband.power.lico_check_power" ]
 arguments = {
   "--power" = {
     set_if = "$get_node_power$"
   }
 }
}

object CheckCommand "lico_temperature" {
 command = [ "/opt/lico/pub/monitor/bin/lico_set_cap","/opt/lico/pub/monitor/bin/python", "outband.temperature.lico_check_temperature" ]
 arguments = {
   "--temperature" = {
     set_if = "$get_node_temperature$"
   }
 }
}

object CheckCommand "lico_nvidia_gpu" {
 command =[ "/opt/lico/pub/monitor/bin/lico_set_cap","/opt/lico/pub/monitor/bin/python", "gpu.lico_check_nvidia_gpu"]
 arguments = {
   "--gpu-util" = {
     set_if = "$get_gpu_util$"
   },
   "--gpu-temp" = {
     set_if = "$get_gpu_temperature$"
   },
   "--gpu-mem-used" = {
     set_if = "$get_gpu_used_memory$"
   },
   "--gpu-mem-total" = {
     set_if = "$get_gpu_total_memory$"
   },
   "--gpu-proc-num" = {
     set_if = "$get_gpu_proc_number$"
   },
   "--gpu-util-mem" = {
     set_if = "$get_gpu_util_memory$"
   },
   "--gpu-name" = {
     set_if = "$get_gpu_product$"
   },
   "--gpu-driver" = {
     set_if = "$get_gpu_driver$"
   },
   "--gpu-pcie" = {
     set_if = "$get_gpu_pcie$"
   },
   "--mig-profile" = {
     set_if = "$get_mig_profile$"
   },
   "--mig-sm-count" = {
     set_if = "$get_mig_sm_count$"
   },
   "--mig-mem-used" = {
     set_if = "$get_mig_used_memory$"
   },
   "--mig-mem-total" = {
     set_if = "$get_mig_total_memory$"
   },
   "--mig-proc-num" = {
     set_if = "$get_mig_proc_number$"
   },
   "--mig-mode" = {
     set_if = "$get_mig_mode$"
   }
 }
}

object CheckCommand "lico_intel_xpu" {
 command = [ "/opt/lico/pub/monitor/bin/lico_set_cap","/opt/lico/pub/monitor/bin/python", "gpu.lico_check_intel_xpu" ]
 arguments = {
   "--dynamic" = {
     set_if = "$get_xpu_dynamic$"
   },
   "--static" = {
     set_if = "$get_xpu_static$"
   },
   "--tile" = {
     set_if = "$get_xpu_tile$"
   },
 }
}

object CheckCommand "lico_scheduler" {
 command = [ "/opt/lico/pub/monitor/bin/lico_set_cap","/opt/lico/pub/monitor/bin/python", "scheduler.slurm.lico_check_slurm" ]
 arguments = {
   "--jobinfo" = {
     set_if = "$get_node_job_info$"
   }
 }
}

object CheckCommand "lico_vnc" {
 command = [ "/opt/lico/pub/monitor/bin/lico_set_cap","/opt/lico/pub/monitor/bin/python", "vnc.lico_check_vnc" ]
 arguments = {
   "--vncinfo" = {
     set_if = "$get_node_vnc_info$"
   }
 }
}
